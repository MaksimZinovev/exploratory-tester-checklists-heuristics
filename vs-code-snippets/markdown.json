{
	"Data type attacks  paths, files": {
		"prefix": "/dta paths files",
		"body": [
			"- Data type attacks paths, files",
			"  - [ ] Long Name (>255 chars)",
			"  - [ ] Special Characters in Name (`space * ? / \\ | < > , . ( ) [ ] { } ; : ‚Äò ‚Äú ! @ # $ % ^ &)`",
			"  - [ ] Non-Existent",
			"  - [ ] Already Exists",
			"  - [ ] No Space",
			"  - [ ] Minimal Space",
			"  - [ ] Write protected",
			"  - [ ] Unavailable",
			"  - [ ] Locked",
			"  - [ ] On Remote Machine",
			"  - [ ] Corrupted"
		],
		"description": "Data type attack paths, files"
	},
	"Data type attacks time date": {
		"prefix": "/dta time date",
		"body": [
			"- Data type attack time and date ",
			"  - [ ] Timeouts",
			"  - [ ] Time Difference between Machines",
			"  - [ ] Crossing Time Zones",
			"  - [ ] Leap Days, leap years",
			"  - [ ] Always Invalid Days (Feb 30, Sept 31)",
			"  - [ ] Feb 29 in Non-Leap Years",
			"  - [ ] Different Formats (June 5, 2001; 06/05/2001; 06/05/01; 06-05-01; 6/5/2001 12:34)",
			"  - [ ] Daylight Savings",
			"  - [ ] Changeover",
			"  - [ ] Reset Clock Backward or Forward"
		],
		"description": "Data type attacks time date"
	},
	"heuristic hiccups": {
		"prefix": [
			"/hhi",
			"/heuristic HICCUPS"
		],
		"body": [
			"- Heuristic HICCUPS",
			"  - (H) history",
			"  - (I) image",
			"  - (C) comparable products",
			"  - (C) claims",
			"  - (U) user's expectations",
			"  - (P) product itself",
			"  - (P) purpose",
			"  - (S) statutes"
		],
		"description": "hiccups"
	},
	"heuristic HICCUPS": {
		"prefix": "!heuristic HICCUPS",
		"body": [
			"HICCUPS"
		],
		"description": "Heuristic HICCUPS"
	},
	"heuristic quality areas": {
		"prefix": "/heuristic quality areas",
		"body": [
			"- Heuristic quality areas",
			"  - (C) capability",
			"  - (R) reliability",
			"  - (U) usability",
			"  - (C) charisma",
			"  - (S) security",
			"  - (S) scalability",
			"  - (C) compatibility",
			"  - (P) performance",
			"  - (I) installability",
			"  - (D) development"
		],
		"description": "heuristic quality areas"
	},
	"heuristics quality areas": {
		"prefix": "!heuristic quality areas",
		"body": [
			"quality areas"
		],
		"description": "heuristic quality areas"
	},
	"heuristic SFDIPOT": {
		"prefix": "/heuristic SFDIPOT",
		"body": [
			"- Heuristic SFDIPOT",
			"  - (S) structure",
			"  - (F) function",
			"  - (D) data",
			"  - (I) interfaces",
			"  - (P) platform",
			"  - (O) operations",
			"  - (T) time"
		],
		"description": "heuristic SFDIPOT"
	},
	"heuristics SFDIPOT": {
		"prefix": "!heuristic SFDIPOT",
		"body": [
			"SFDIPOT"
		],
		"description": "heuristic SFDIPOT"
	},
	"heuristic CRUD": {
		"prefix": "/heuristic CRUD",
		"body": [
			"- Heuristic CRUD",
			"  - (C) create",
			"  - (R) read",
			"  - (U) update",
			"  - (D) delete"
		],
		"description": "heuristic CRUD"
	},
	"heuristics CRUD": {
		"prefix": "!heuristic CRUD",
		"body": [
			"CRUD"
		],
		"description": "heuristic CRUD"
	},
	"heuristic FDSFSCURA": {
		"prefix": "/heuristic FDSFSCURA",
		"body": [
			"- Heuristic FDSFSCURA",
			"  - (F) functional testing",
			"  - (D) domain testing",
			" - (S) stress testing",
			"  - (F) flow testing",
			"  - (S) scenario testing",
			"  - (C) claims testing",
			"  - (U) user testing",
			"  - (R) risk testing",
			"  - (A) automated checking"
		],
		"description": "heuristic FDSFSCURA"
	},
	"heuristic CRUCSS-CPID": {
		"prefix": "/heuristic CRUCSS-CPID",
		"body": [
			"- Heuristic CRUCSS-CPID",
			"  - (C) capability",
			"  - (R) reliability",
			"  - (U) usability",
			"  - (C) charisma",
			"  - (S) security",
			"  - (S) scalability",
			"  - (C) compatibility",
			"  - (P) performance",
			"  - (I) installability",
			"  - (D) development"
		],
		"description": "heuristic CRUCSS-CPID"
	},
	"heuristics FDSFSCURA": {
		"prefix": "!heuristic FDSFSCURA",
		"body": [
			"FDSFSCURA"
		],
		"description": "heuristic FDSFSCURA"
	},
	"heuristic follow the data": {
		"prefix": "/heuristic follow the data",
		"body": [
			"- Perform a sequence of actions involving data, verifying the data integrity at each step.",
			"(Example: Enter ‚Üí Search ‚Üí Report ‚Üí Export ‚Üí Import ‚Üí Update ‚Üí View)"
		],
		"description": "heuristic follow the data"
	},
	"heuristic interruptions": {
		"prefix": "/heuristic interruptions",
		"body": [
			"- Identify ‚Äúhas a‚Äù relationships (a Customer has an Invoice; an Invoice has multiple Line Items). Apply CRUD, Count, Position, and/or Selection heuristics (Customer has 0, 1, many Invoices; Invoice has 0, 1, many Line Items; Delete last Line Item then Read; Update first Line Item; Some, None, All Line Items are taxable; Delete Customer with 0, 1, Many Invoices)"
		],
		"description": "heuristic follow the data"
	},
	"heuristics follow the data": {
		"prefix": "!heuristic follow the data",
		"body": [
			"follow the data"
		],
		"description": "heuristics follow the data"
	},
	"checklist Text field (1)": {
		"prefix": [
			"/Data type attack text field 1",
			"/dta text field 1"
		],
		"body": [
			"- Data type attack text field (1)",
			"  - [ ] valid data",
			"  - [ ] invalid data",
			"  - [ ] letters",
			"  - [ ] numbers",
			"  - [ ] blank or empty",
			"  - [ ] mandatory fields"
		],
		"description": "checklist text field (1)"
	},
	"checklist Text field (2)": {
		"prefix": [
			"/Data type attack text field 2",
			"/dta text field 2"
		],
		"body": [
			"- Data type attack text field (2)",
			"  - [ ] minimum and maximum length",
			"  - [ ] space",
			"  - [ ] long (64, 255, 256, 257, 1000, 1024, 2000, 2048 or more characters) ",
			"  - [ ] short (1,2, 3 characters)",
			"  - [ ] one word",
			"  - [ ] multiple words"
		],
		"description": "checklist text field (2)"
	},
	"checklist Text field (3)": {
		"prefix": [
			"/Data type attack text field 3",
			"/dta text field 3"
		],
		"body": [
			"- Data type attack text field (3)",
			"  - [ ] pace leading/trailing/in the middle",
			"  - [ ] line break",
			"  - [ ] tabs",
			"  - [ ] null value",
			"  - [ ] HTML-tags `<blink>Hello there</blink>`",
			"  - [ ] special characters (such as<!#$|%)",
			"  - [ ] emojis üòÄüëç"
		],
		"description": "checklist text field (3)"
	},
	"checklist Text field  format exploits (4)": {
		"prefix": [
			"/Data type attack text field 4",
			"/dta format exploits"
		],
		"body": [
			"- Data type attack text field format exploits",
			"  - [ ] html-tags `<blink>Hello there</blink>`",
			"  - [ ] js injection `<script>alert('Executing JS')</script>`",
			"  - [ ] js injection single quote `'-prompt()-'`",
			"  - [ ] broken html `<i><b>Bold</i></b>`",
			"  - [ ] sql injection ` and  ‚Äò1‚Äô=‚Äô1`",
			"  - [ ] sql injection `admin'--`"
		],
		"description": "checklist text field format exploits"
	},
	"checklist type attack (5)": {
		"prefix": [
			"/Data type attack text field 5",
			"/dta text field 5"
		],
		"body": [
			"- Data type attack text field format exploits",
			"  - [ ] accessibility: tab navigation",
			"  - [ ] existing value",
			"  - [ ] Hidden text",
			"  - [ ] Usability: Different browsers",
			"  - [ ] Usability: Browser zoom in/out",
			"  - [ ] Security: Extremely big requests",
			"  - [ ] Scenario: \"nasty words\""
		],
		"description": "checklist text field format exploits"
	},
	"checklist Text size with spaces": {
		"prefix": [
			"/Text size with spaces",
			"/dts w spaces"
		],
		"body": [
			"- Text size with spaces",
			"  - [ ] 128b:Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem",
			"  - [ ] 129b:`Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem `"
		],
		"description": "data Text size with spaces"
	},
	"heuristics list": {
		"prefix": "/heuristics list",
		"body": [
			"- Heuristics list",
			"  - HICCUPS",
			"  - SFDIPOT",
			"  - CRUD - Create, Read, Update, Delete",
			"  - Follow the data",
			"  - FDSFSCURA",
			"  - FDSFSCURA",
			"  - Goldilocks - Too Big, Too Small, Just Right",
			"  - Boundaries - Approaching the Boundary (almost too big, almost too small), At the Boundary",
			"  - Dependencies",
			"  - Constraints",
			"  - Input Method",
			"  - State Analysis",
			"  - Users & Scenarios"
		],
		"description": "heuristics list"
	},
	"basic test types": {
		"prefix": "/test types",
		"body": [
			"- Basic test types",
			"  - [ ] Basic positive tests (happy paths)",
			"  - [ ] Extended positive testing with optional parameters",
			"  - [ ] Negative testing with valid input (for example, trying to add an existing username)",
			"  - [ ] Negative testing with invalid input (trying to add a username which is null)",
			"  - [ ] Destructive testing (for example, fill in long text into input field).",
			"  - [ ] UI verification.",
			"  - [ ] Accessibility testing.",
			"  - [ ] Usability testing",
			"  - [ ] Security (session management, link expiry, error handling).",
			"  - [ ] Mobile testing: verify UI layout (elements overlapping, misaligned, no white space) modals, menus"
		],
		"description": "basic test types"
	},
	"Accessibility testing checklist 1": {
		"prefix": "/checklist ac1",
		"body": [
			"- Accessibility testing checklist 1",
			"  - [ ] Google Chrome Lighthouse - Accessibility score",
			"  - [ ] Keyboard Navigation. All interactive elements are accessible through the keyboard",
			"  - [ ] Keyboard Navigation. All elements are accessible through the keyboard",
			"  - [ ] Text. Sufficient text size, contrast",
			"  - [ ] Images. Alt text for important pictures. Empty alt text for pictures that lack importance",
			"  - [ ] w3.org/WAI/tutorials/"
		],
		"description": "Accessibility testing checklist 1"
	},
	"Accessibility testing checklist 2": {
		"prefix": "/checklist ac1",
		"body": [
			"  - [ ] Elements. It is clearly shown what object is active",
			"  - [ ] Images. Pictures are not used to represent only textual content",
			"  - [ ] HTML. No big validation errors in the HTML/XHTML code",
			"  - [ ] Labels. Forms use the correct label for every element",
			"  - [ ] Media. Any video/sound content has textual alternatives explaining the content"
		],
		"description": "Accessibility testing checklist 2"
	},
	"Usability testing checklist 1": {
		"prefix": "/checklist usability1",
		"body": [
			"- Usability testing checklist",
			"  - prefix: `/checklist usability`",
			"  - [ ] Consistent language",
			"  - [ ] Consistent use of fonts",
			"  - [ ] Correct alignment of text, numbers and fields",
			"  - [ ] Correct spelling and grammar",
			"  - [ ] Correct tab order",
			"  - [ ] Error messages (language, spelling, grammar)",
			"  - [ ] Objects have a consistent shape and size (buttons, images etc)",
			"  - [ ] Inactive links and objects are clearly disabled (grey, toned down, not shown)"
		],
		"description": "Usability testing checklist"
	},
	"Usability testing checklist 2": {
		"prefix": "/checklist usability2",
		"body": [
		"- Usability testing checklist 2",
		"  - prefix: `/checklist usability2",
		"  - [ ] No broken links, images or objects",
		"  - [ ] Test with different screen sizes",
		"  - [ ] Test with different browsers",
		"  - [ ] Test with different devices",
		"  - [ ] Dark-light mode",
		"  - [ ] Scroll bars are not shown if not needed",
		"  - [ ] Scroll bars are shown if needed",
		"  - [ ] Windows can be resized without losing functionality",
		],
		"description": "Usability testing checklist 2"
	},
	"Top 10 most common screen resolutions": {
		"prefix": "/checklist screen size",
		"body": [
		"- Top 10 most common screen resolutions",
		"  1) 1920√ó1080 (22%)",
		"  2) 1366√ó768 (11%)",
		"  3) 1440√ó900 (9%)",
		"  4) 1536√ó864 (8%)",
		"  5) 2560√ó1440 (7%)",
		"  6) 1680√ó1050 (4%)",
		"  7) 1280√ó720 (3%)",
		"  8) 1280√ó800 (2%)",
		"  9) 1792√ó1120 (2%)",
		"  10) 1600√ó900 (1%)"
		],
		"description": "Usability testing checklist 2"
	},
	"Security testing checklist 1": {
		"prefix": "/checklist sec1",
		"body": [
		"- Security testing checklist 1",
		"  - [ ] html-tags `<blink>Hello there</blink>`",
		"  - [ ] js injection `<script>alert('Executing JS')</script>`",
		"  - [ ] js injection single quote `'-prompt()-'`",
		"  - [ ] broken html `<i><b>Bold</i></b>`",
		"  - [ ] sql injection `and  ‚Äò1‚Äô=‚Äô1`",
		"  - [ ] sql injection `admin'--`",
		"  - [ ] reasonable limit for input field (characters, file size, number, etc)",
		"  - [ ] Unexpected errors: The system must not show information about server, database etc",
		"  - [ ] Input fields are validated, sanitized on both  frontend and backend",
		"  - [ ] Session variables can't be accessed /manipulated, for example via address bar"
		],
		"description": "Security testing checklist 1"
	},
	"Security testing checklist 2": {
		"prefix": "/checklist sec2`, `/security auth`",
		"body": [
		"- Security testing checklist 2 authentication",
		"  - [ ] Cookies are saved  encrypted  and cannot be read/manipulated",
		"  - [ ] You cannot access other users' documents, accounts, orders, etc.",
		"  - [ ] You cannot access private resources without authentication",
		"  - [ ] You cannot create, update, delete data using other users' authentication",
		"  - [ ] Password hash is used"
		],
		"description": "Security testing checklist 1"
	},
	"Security testing checklist 3 OWASP top 10 AP": {
		"prefix": "/checklist sec3, /security owasp api",
		"body": [
		"- Security testing checklist 3 OWASP top 10 API",
		"  - [ ] Broken object-level authorization",
		"  - [ ] Broken user authentication",
		"  - [ ] Excessive data exposure",
		"  - [ ] Lack of resource-limiting and rate-limiting",
		"  - [ ] Broken function level authorization",
		"  - [ ] Mass assignment",
		"  - [ ] Injections",
		"  - [ ] Improper assets management",
		"  - [ ] Insufficient logging and monitoring"
		],
		"description": "Security testing checklist 3 OWASP top 10 AP"
	}, 
	"today": {
		"prefix": "/today",
		"body": [
			"$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE"
		],
		"description": "today"
	},
	"time now": {
		"prefix": "/start time now",
		"body": [
			"",
			"Start: $CURRENT_HOUR-$CURRENT_MINUTE",
			"Finish: "
		],
		"description": "start time now"
	}
}