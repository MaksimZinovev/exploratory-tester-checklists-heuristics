{
	// Snippets  https://github.com/MaksimZinovev/exploratory-tester-checklists-heuristics
	// Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Data type attacks  paths, files": {
		"prefix": "/dta paths files",
		"body": [
		  "- Data type attacks  paths, files",
		  "  - [ ] Long Name (>255 chars)",
		  "  - [ ] Special Characters in Name (`space * ? / \\ | < > , . ( ) [ ] { } ; : ‘ “ ! ",
		  "@ # $ % ^ &)`",
		  "  - [ ] Non-Existent",
		  "  - [ ] Already Exists",
		  "  - [ ] No Space",
		  "  - [ ] Minimal Space",
		  "  - [ ] Write protected",
		  "  - [ ] Unavailable",
		  "  - [ ] Locked",
		  "  - [ ] On Remote Machine",
		  "  - [ ] Corrupted"
		],
		"description": "Data type attack paths, files"
	  },
	  "Data type attacks time date": {
		"prefix": "/dta time date",
		"body": [
		  "- Data type attack time and date ",
		  "  - [ ] Timeouts",
		  "  - [ ] Time Difference between Machines",
		  "  - [ ] Crossing Time Zones",
		  "  - [ ] Leap Days, leap years",
		  "  - [ ] Always Invalid Days (Feb 30, Sept 31)",
		  "  - [ ] Feb 29 in Non-Leap Years",
		  "  - [ ] Different Formats (June 5, 2001; 06/05/2001; 06/05/01; 06-05-01; 6/5/2001 12:34)",
		  "  - [ ] Daylight Savings",
		  "  - [ ] Changeover",
		  "  - [ ] Reset Clock Backward or Forward"
		],
		"description": "Data type attacks time date"
	  },
	"heuristic hiccups": {
		"prefix": [
			"/hhi",
			"/heuristic HICCUPS"
		],
		"body": [
			"- Heuristic HICCUPS",
			"  - (H) history",
			"  - (I) image",
			"  - (C) comparable products",
			"  - (C) claims",
			"  - (U) user's expectations",
			"  - (P) product itself",
			"  - (P) purpose",
			"  - (S) statutes"
		],
		"description": "hiccups"
	},
	"heuristic HICCUPS": {
		"prefix": "!heuristic HICCUPS",
		"body": [
			"HICCUPS"
		],
		"description": "Heuristic SFDIPOT"
	},
	"heuristic quality areas": {
		"prefix": "/heuristic quality areas",
		"body": [
			"- Heuristic quality areas",
			"  - (C) capability",
			"  - (R) reliability",
			"  - (U) usability",
			"  - (C) charisma",
			"  - (S) security",
			"  - (S) scalability",
			"  - (C) compatibility",
			"  - (P) performance",
			"  - (I) installability",
			"  - (D) development"
		],
		"description": "heuristic quality areas"
	},
	"heuristics quality areas": {
		"prefix": "!heuristic quality areas",
		"body": [
			"quality areas"
		],
		"description": "heuristic quality areas"
	},
	"heuristic SFDIPOT": {
		"prefix": "/heuristic SFDIPOT",
		"body": [
			"- Heuristic SFDIPOT",
			"  - (S) structure",
			"  - (F) function",
			"  - (D) data",
			"  - (I) interfaces",
			"  - (P) platform",
			"  - (O) operations",
			"  - (T) time"
		],
		"description": "heuristic SFDIPOT"
	},
	"heuristics SFDIPOT": {
		"prefix": "!heuristic SFDIPOT",
		"body": [
			"SFDIPOT"
		],
		"description": "heuristic SFDIPOT"
	},
	"heuristic CRUD": {
		"prefix": "/heuristic CRUD",
		"body": [
			"- Heuristic CRUD",
			"  - (C) create",
			"  - (R) read",
			"  - (U) update",
			"  - (D) delete"
		],
		"description": "heuristic CRUD"
	},
	"heuristics CRUD": {
		"prefix": "!heuristic CRUD",
		"body": [
			"CRUD"
		],
		"description": "heuristic CRUD"
	},
	"heuristic FDSFSCURA": {
		"prefix": "/heuristic FDSFSCURA",
		"body": [
			"- (F) functional testing",
			"- (D) domain testing",
			"- (S) stress testing",
			"- (F) flow testing",
			"- (S) scenario testing",
			"- (C) claims testing",
			"- (U) user testing",
			"- (R) risk testing",
			"- (A) automated checking"
		],
		"description": "heuristic FDSFSCURA"
	},
	"heuristics FDSFSCURA": {
		"prefix": "!heuristic FDSFSCURA",
		"body": [
			"FDSFSCURA"
		],
		"description": "heuristic FDSFSCURA"
	},
	"heuristic follow the data": {
		"prefix": "/heuristic follow the data",
		"body": [
			"Perform a sequence of actions involving data, verifying the data integrity at each step.",
			"(Example: Enter → Search → Report → Export → Import → Update → View)"
		],
		"description": "heuristic follow the data"
	},
	"heuristics follow the data": {
		"prefix": "!heuristic follow the data",
		"body": [
			"follow the data"
		],
		"description": "heuristics follow the data"
	},
	"checklist Text field (1)": {
		"prefix": ["/Data type attack text field 1", "/dta text field 1"],
		"body": [
			"- Data type attack text field (1)",
			"  - [ ] valid data",
			"  - [ ] invalid data",
			"  - [ ] letters",
			"  - [ ] numbers",
			"  - [ ] blank or empty",
			"  - [ ] mandatory fields"
		],
		"description": "checklist text field (1)"
	},
	"checklist Text field (2)": {
		"prefix": ["/Data type attack text field 2", "/dta text field 2"],
		"body": [
			"- Data type attack text field (2)",
			"  - [ ] minimum and maximum length",
			"  - [ ] space",
			"  - [ ] long (64, 255, 256, 257, 1000, 1024, 2000, 2048 or more characters) ",
			"  - [ ] short (1,2, 3 characters)",
			"  - [ ] one word",
			"  - [ ] multiple words"
		],
		"description": "checklist text field (2)"
	},
	"checklist Text field (3)": {
		"prefix": ["/Data type attack text field 3", "/dta text field 3"],
		"body": [
			"-Data type attack text field (3)",
			"  - [ ] pace leading/trailing/in the middle",
			"  - [ ] line break",
			"  - [ ] tabs",
			"  - [ ] null value",
			"  - [ ] HTML-tags `<blink>Hello there</blink>`",
			"  - [ ] special characters (such as<!#$|%)",
			"  - [ ] emojis 😀👍"
		],
		"description": "checklist text field (3)"
	},
	"checklist Text field  format exploits (4)": {
		"prefix": ["/Data type attack text field 4", "/dta format exploits"],
		"body": [
			"- Data type attack text field format exploits",
			"  - [ ] html-tags `<blink>Hello there</blink>`",
			"  - [ ] js injection `<script>alert('Executing JS')</script>`",
			"  - [ ] js injection single quote `'-prompt()-'`",
			"  - [ ] broken html `<i><b>Bold</i></b>`",
			"  - [ ] sql injection ` and  ‘1’=’1`",
			"  - [ ] sql injection `admin'--`"
		],
		"description": "checklist text field format exploits"
	},
	"checklist Text size with spaces": {
		"prefix": ["/Text size with spaces", "/dts w spaces"],
		"body": [
			"- Text size with spaces",
			"  - [ ] 128b:Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem",
			"  - [ ] 129b:`Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Lorem `"
		],
		"description": "data Text size with spaces"
	},
	"heuristics list": {
		"prefix": ["/heuristics list"],
		"body": [
			"- Heuristics list",
			"  - HICCUPS",
			"  - SFDIPOT",
			"  - CRUD - Create, Read, Update, Delete",
			"  - Follow the data",
			"  - FDSFSCURA",
			"  - FDSFSCURA",
			"  - Goldilocks - Too Big, Too Small, Just Right",
			"  - Boundaries - Approaching the Boundary (almost too big, almost too small), At the Boundary",
			"  - Dependencies",
			"  - Constraints",
			"  - Input Method",
			"  - State Analysis",
			"  - Users & Scenarios"
		],
		"description": "heuristics list"
	},
	"today": {
		"prefix": "/today",
		"body": [
			"$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE"
		],
		"description": "today"
	},
	"time now": {
		"prefix": "/start time now",
		"body": [
			"","Start: $CURRENT_HOUR-$CURRENT_MINUTE","Finish: "
		],
		"description": "start time now"
	}
}